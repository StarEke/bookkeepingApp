/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CustomerCreateNestedManyWithoutAdminsInput } from "./CustomerCreateNestedManyWithoutAdminsInput";
import { ValidateNested, IsOptional, IsString, IsInt } from "class-validator";
import { Type } from "class-transformer";
import { ItemCreateNestedManyWithoutAdminsInput } from "./ItemCreateNestedManyWithoutAdminsInput";
import { ManagerCreateNestedManyWithoutAdminsInput } from "./ManagerCreateNestedManyWithoutAdminsInput";
import { SaleCreateNestedManyWithoutAdminsInput } from "./SaleCreateNestedManyWithoutAdminsInput";
import { StoreCreateNestedManyWithoutAdminsInput } from "./StoreCreateNestedManyWithoutAdminsInput";
import { SupplierCreateNestedManyWithoutAdminsInput } from "./SupplierCreateNestedManyWithoutAdminsInput";
@InputType()
class AdminCreateInput {
  @ApiProperty({
    required: false,
    type: () => CustomerCreateNestedManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => CustomerCreateNestedManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => CustomerCreateNestedManyWithoutAdminsInput, {
    nullable: true,
  })
  customer?: CustomerCreateNestedManyWithoutAdminsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  firstName!: string;

  @ApiProperty({
    required: false,
    type: () => ItemCreateNestedManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => ItemCreateNestedManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => ItemCreateNestedManyWithoutAdminsInput, {
    nullable: true,
  })
  item?: ItemCreateNestedManyWithoutAdminsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  lastName!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  location!: string;

  @ApiProperty({
    required: true,
    type: () => ManagerCreateNestedManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => ManagerCreateNestedManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => ManagerCreateNestedManyWithoutAdminsInput, {
    nullable: true,
  })
  manager?: ManagerCreateNestedManyWithoutAdminsInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  phoneNumber!: number;

  @ApiProperty({
    required: false,
    type: () => SaleCreateNestedManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => SaleCreateNestedManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => SaleCreateNestedManyWithoutAdminsInput, {
    nullable: true,
  })
  sales?: SaleCreateNestedManyWithoutAdminsInput;

  @ApiProperty({
    required: false,
    type: () => StoreCreateNestedManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => StoreCreateNestedManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => StoreCreateNestedManyWithoutAdminsInput, {
    nullable: true,
  })
  stores?: StoreCreateNestedManyWithoutAdminsInput;

  @ApiProperty({
    required: false,
    type: () => SupplierCreateNestedManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => SupplierCreateNestedManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => SupplierCreateNestedManyWithoutAdminsInput, {
    nullable: true,
  })
  supplier?: SupplierCreateNestedManyWithoutAdminsInput;
}
export { AdminCreateInput };
