/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CustomerUpdateManyWithoutAdminsInput } from "./CustomerUpdateManyWithoutAdminsInput";
import { ValidateNested, IsOptional, IsString, IsInt } from "class-validator";
import { Type } from "class-transformer";
import { ItemUpdateManyWithoutAdminsInput } from "./ItemUpdateManyWithoutAdminsInput";
import { ManagerUpdateManyWithoutAdminsInput } from "./ManagerUpdateManyWithoutAdminsInput";
import { SaleUpdateManyWithoutAdminsInput } from "./SaleUpdateManyWithoutAdminsInput";
import { StoreUpdateManyWithoutAdminsInput } from "./StoreUpdateManyWithoutAdminsInput";
import { SupplierUpdateManyWithoutAdminsInput } from "./SupplierUpdateManyWithoutAdminsInput";
@InputType()
class AdminUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CustomerUpdateManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => CustomerUpdateManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => CustomerUpdateManyWithoutAdminsInput, {
    nullable: true,
  })
  customer?: CustomerUpdateManyWithoutAdminsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string;

  @ApiProperty({
    required: false,
    type: () => ItemUpdateManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => ItemUpdateManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => ItemUpdateManyWithoutAdminsInput, {
    nullable: true,
  })
  item?: ItemUpdateManyWithoutAdminsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string;

  @ApiProperty({
    required: false,
    type: () => ManagerUpdateManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => ManagerUpdateManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => ManagerUpdateManyWithoutAdminsInput, {
    nullable: true,
  })
  manager?: ManagerUpdateManyWithoutAdminsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  phoneNumber?: number;

  @ApiProperty({
    required: false,
    type: () => SaleUpdateManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => SaleUpdateManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => SaleUpdateManyWithoutAdminsInput, {
    nullable: true,
  })
  sales?: SaleUpdateManyWithoutAdminsInput;

  @ApiProperty({
    required: false,
    type: () => StoreUpdateManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => StoreUpdateManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => StoreUpdateManyWithoutAdminsInput, {
    nullable: true,
  })
  stores?: StoreUpdateManyWithoutAdminsInput;

  @ApiProperty({
    required: false,
    type: () => SupplierUpdateManyWithoutAdminsInput,
  })
  @ValidateNested()
  @Type(() => SupplierUpdateManyWithoutAdminsInput)
  @IsOptional()
  @Field(() => SupplierUpdateManyWithoutAdminsInput, {
    nullable: true,
  })
  supplier?: SupplierUpdateManyWithoutAdminsInput;
}
export { AdminUpdateInput };
