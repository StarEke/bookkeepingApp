/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AdminWhereUniqueInput } from "../../admin/base/AdminWhereUniqueInput";
import { ValidateNested, IsOptional, IsInt, IsNumber } from "class-validator";
import { Type } from "class-transformer";
import { ItemCreateNestedManyWithoutSalesInput } from "./ItemCreateNestedManyWithoutSalesInput";
import { ManagerWhereUniqueInput } from "../../manager/base/ManagerWhereUniqueInput";
@InputType()
class SaleCreateInput {
  @ApiProperty({
    required: false,
    type: () => AdminWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AdminWhereUniqueInput)
  @IsOptional()
  @Field(() => AdminWhereUniqueInput, {
    nullable: true,
  })
  admin?: AdminWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: () => ItemCreateNestedManyWithoutSalesInput,
  })
  @ValidateNested()
  @Type(() => ItemCreateNestedManyWithoutSalesInput)
  @IsOptional()
  @Field(() => ItemCreateNestedManyWithoutSalesInput, {
    nullable: true,
  })
  item?: ItemCreateNestedManyWithoutSalesInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  itemQuantity!: number;

  @ApiProperty({
    required: false,
    type: () => ManagerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ManagerWhereUniqueInput)
  @IsOptional()
  @Field(() => ManagerWhereUniqueInput, {
    nullable: true,
  })
  manager?: ManagerWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  sellingPrice!: number;
}
export { SaleCreateInput };
