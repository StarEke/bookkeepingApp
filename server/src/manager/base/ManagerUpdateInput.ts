/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AdminWhereUniqueInput } from "../../admin/base/AdminWhereUniqueInput";
import { ValidateNested, IsOptional, IsString, IsInt } from "class-validator";
import { Type } from "class-transformer";
import { CustomerUpdateManyWithoutManagersInput } from "./CustomerUpdateManyWithoutManagersInput";
import { ItemUpdateManyWithoutManagersInput } from "./ItemUpdateManyWithoutManagersInput";
import { SaleUpdateManyWithoutManagersInput } from "./SaleUpdateManyWithoutManagersInput";
import { StoreWhereUniqueInput } from "../../store/base/StoreWhereUniqueInput";
import { SupplierUpdateManyWithoutManagersInput } from "./SupplierUpdateManyWithoutManagersInput";
@InputType()
class ManagerUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AdminWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AdminWhereUniqueInput)
  @IsOptional()
  @Field(() => AdminWhereUniqueInput, {
    nullable: true,
  })
  admins?: AdminWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CustomerUpdateManyWithoutManagersInput,
  })
  @ValidateNested()
  @Type(() => CustomerUpdateManyWithoutManagersInput)
  @IsOptional()
  @Field(() => CustomerUpdateManyWithoutManagersInput, {
    nullable: true,
  })
  customers?: CustomerUpdateManyWithoutManagersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  gender?: string;

  @ApiProperty({
    required: false,
    type: () => ItemUpdateManyWithoutManagersInput,
  })
  @ValidateNested()
  @Type(() => ItemUpdateManyWithoutManagersInput)
  @IsOptional()
  @Field(() => ItemUpdateManyWithoutManagersInput, {
    nullable: true,
  })
  items?: ItemUpdateManyWithoutManagersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  phoneNumber?: number | null;

  @ApiProperty({
    required: false,
    type: () => SaleUpdateManyWithoutManagersInput,
  })
  @ValidateNested()
  @Type(() => SaleUpdateManyWithoutManagersInput)
  @IsOptional()
  @Field(() => SaleUpdateManyWithoutManagersInput, {
    nullable: true,
  })
  sales?: SaleUpdateManyWithoutManagersInput;

  @ApiProperty({
    required: false,
    type: () => StoreWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StoreWhereUniqueInput)
  @IsOptional()
  @Field(() => StoreWhereUniqueInput, {
    nullable: true,
  })
  stores?: StoreWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => SupplierUpdateManyWithoutManagersInput,
  })
  @ValidateNested()
  @Type(() => SupplierUpdateManyWithoutManagersInput)
  @IsOptional()
  @Field(() => SupplierUpdateManyWithoutManagersInput, {
    nullable: true,
  })
  suppliers?: SupplierUpdateManyWithoutManagersInput;
}
export { ManagerUpdateInput };
