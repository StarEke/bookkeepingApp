/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AdminUpdateManyWithoutSuppliersInput } from "./AdminUpdateManyWithoutSuppliersInput";
import { ValidateNested, IsOptional, IsString, IsInt } from "class-validator";
import { Type } from "class-transformer";
import { ItemUpdateManyWithoutSuppliersInput } from "./ItemUpdateManyWithoutSuppliersInput";
import { ManagerUpdateManyWithoutSuppliersInput } from "./ManagerUpdateManyWithoutSuppliersInput";
@InputType()
class SupplierUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AdminUpdateManyWithoutSuppliersInput,
  })
  @ValidateNested()
  @Type(() => AdminUpdateManyWithoutSuppliersInput)
  @IsOptional()
  @Field(() => AdminUpdateManyWithoutSuppliersInput, {
    nullable: true,
  })
  admins?: AdminUpdateManyWithoutSuppliersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string;

  @ApiProperty({
    required: false,
    type: () => ItemUpdateManyWithoutSuppliersInput,
  })
  @ValidateNested()
  @Type(() => ItemUpdateManyWithoutSuppliersInput)
  @IsOptional()
  @Field(() => ItemUpdateManyWithoutSuppliersInput, {
    nullable: true,
  })
  items?: ItemUpdateManyWithoutSuppliersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string;

  @ApiProperty({
    required: false,
    type: () => ManagerUpdateManyWithoutSuppliersInput,
  })
  @ValidateNested()
  @Type(() => ManagerUpdateManyWithoutSuppliersInput)
  @IsOptional()
  @Field(() => ManagerUpdateManyWithoutSuppliersInput, {
    nullable: true,
  })
  manager?: ManagerUpdateManyWithoutSuppliersInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  phoneNumber?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  userName?: string;
}
export { SupplierUpdateInput };
