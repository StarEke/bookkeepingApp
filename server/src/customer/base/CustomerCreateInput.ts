/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AdminCreateNestedManyWithoutCustomersInput } from "./AdminCreateNestedManyWithoutCustomersInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { ManagerWhereUniqueInput } from "../../manager/base/ManagerWhereUniqueInput";
@InputType()
class CustomerCreateInput {
  @ApiProperty({
    required: false,
    type: () => AdminCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => AdminCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => AdminCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  admins?: AdminCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  firstName!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  gender!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  lastName!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: () => ManagerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ManagerWhereUniqueInput)
  @IsOptional()
  @Field(() => ManagerWhereUniqueInput, {
    nullable: true,
  })
  manager?: ManagerWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  phoneNumber!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  userName!: string;
}
export { CustomerCreateInput };
