/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Admin } from "../../admin/base/Admin";
import {
  ValidateNested,
  IsNumber,
  IsDate,
  IsString,
  IsInt,
  IsOptional,
} from "class-validator";
import { Type } from "class-transformer";
import { Manager } from "../../manager/base/Manager";
import { Sale } from "../../sale/base/Sale";
import { Supplier } from "../../supplier/base/Supplier";
@ObjectType()
class Item {
  @ApiProperty({
    required: true,
    type: () => Admin,
  })
  @ValidateNested()
  @Type(() => Admin)
  admins?: Admin;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  costPrice!: number;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  itemName!: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  itemQuantity!: number | null;

  @ApiProperty({
    required: true,
    type: () => Manager,
  })
  @ValidateNested()
  @Type(() => Manager)
  manager?: Manager;

  @ApiProperty({
    required: true,
    type: () => Sale,
  })
  @ValidateNested()
  @Type(() => Sale)
  sales?: Sale;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  sellingPrice!: number | null;

  @ApiProperty({
    required: true,
    type: () => Supplier,
  })
  @ValidateNested()
  @Type(() => Supplier)
  supplier?: Supplier;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Item };
