datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  firstName String
  id        String   @id @default(cuid())
  lastName  String
  password  String
  roles     String[]
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Customer {
  admins      Admin[]
  createdAt   DateTime @default(now())
  email       String?
  firstName   String
  gender      String
  id          String   @id @default(cuid())
  lastName    String
  location    String?
  manager     Manager? @relation(fields: [managerId], references: [id])
  managerId   String?
  phoneNumber String   @unique
  updatedAt   DateTime @updatedAt
  userName    String   @unique
}

model Admin {
  createdAt   DateTime   @default(now())
  customer    Customer[]
  email       String     @unique
  firstName   String
  id          String     @id @default(cuid())
  item        Item[]
  lastName    String
  location    String
  manager     Manager[]
  phoneNumber Int        @unique
  sales       Sale[]
  stores      Store[]
  supplier    Supplier[]
  updatedAt   DateTime   @updatedAt
}

model Manager {
  admins      Admin?     @relation(fields: [adminsId], references: [id])
  adminsId    String?
  createdAt   DateTime   @default(now())
  customers   Customer[]
  firstName   String
  gender      String
  id          String     @id @default(cuid())
  items       Item[]
  lastName    String?
  phoneNumber Int?
  sales       Sale[]
  stores      Store?     @relation(fields: [storesId], references: [id])
  storesId    String?
  suppliers   Supplier[]
  updatedAt   DateTime   @updatedAt
}

model Store {
  admin     Admin?   @relation(fields: [adminId], references: [id])
  adminId   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  location  String?
  manager   Manager
  storeName String   @unique
  updatedAt DateTime @updatedAt
}

model Sale {
  admin        Admin?   @relation(fields: [adminId], references: [id])
  adminId      String?
  createdAt    DateTime @default(now())
  id           String   @id @default(cuid())
  item         Item[]
  itemQuantity Int
  manager      Manager? @relation(fields: [managerId], references: [id])
  managerId    String?
  sellingPrice Float
  updatedAt    DateTime @updatedAt
}

model Item {
  admins       Admin    @relation(fields: [adminsId], references: [id])
  adminsId     String
  costPrice    Float
  createdAt    DateTime @default(now())
  id           String   @id @default(cuid())
  itemName     String
  itemQuantity Int?
  manager      Manager  @relation(fields: [managerId], references: [id])
  managerId    String
  sales        Sale     @relation(fields: [salesId], references: [id])
  salesId      String
  sellingPrice Float?
  supplier     Supplier @relation(fields: [supplierId], references: [id])
  supplierId   String
  updatedAt    DateTime @updatedAt
}

model Supplier {
  admins      Admin[]
  createdAt   DateTime  @default(now())
  email       String?
  firstName   String
  id          String    @id @default(cuid())
  items       Item[]
  lastName    String
  location    String
  manager     Manager[]
  phoneNumber Int       @unique
  updatedAt   DateTime  @updatedAt
  userName    String    @unique
}